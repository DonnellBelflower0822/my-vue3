function diff(c1, c2) {
  let i = 0
  let e1 = c1.length - 1
  let e2 = c2.length - 1

  // 从左往右，一次比较是否是相同类型，遇到第一个不同类型则跳出循环
  while (i <= e1 && i <= e2) {
    if (c1[i] === c2[i]) {
      // 走更新操作
      i += 1
    } else {
      break
    }
  }

  // 走到这里：已经处理了[0,i]
  while (i <= e1 && i <= e2) {
    if (c1[e1] === c2[e2]) {
      e1 -= 1
      e2 -= 1
    } else {
      break
    }
  }

  console.log(i, e1, e2)

  if (i > e1) {
    if (i <= e2) {
      // 新增: [i, e2]
      while (i <= e2) {
        console.log('新增', c2[i])
        i++
      }
    }
  } else if (i > e2) {
    // 后面删除
    // ['a', 'b', 'c', 'd', 'e', 'f']
    // ['a', 'b', 'c', 'd']
    // i= 4. e1 =5, e2 = 3, (i > e2，且删除 [i,e1])

    // 中间删除
    // ['a', 'b', 'e', 'c', 'd']
    // ['a', 'b', 'c', 'd']
    // i = 2，e1 = 2, e2 = 1 (i > e2 且 删除[i,e1])

    // 前面删除
    // ['f', 'a', 'b', 'c', 'd']
    // ['a', 'b', 'c', 'd']
    // i=0, e1 =0, e2=-1 (i> e2 ,且删除 [i,e1])

    // 删除: [i, e1]
    while (i <= e1) {
      console.log('删除', c1[i])
      i++
    }
  }
}

// 删除
// 后面删除
// ['a', 'b', 'c', 'd', 'e', 'f']
// ['a', 'b', 'c', 'd']
// i= 4. e1 =5, e2 = 3, (i > e2，且删除 [i,e1])
// diff(['a', 'b', 'c', 'd', 'e', 'f'], ['a', 'b', 'c', 'd'])

// 中间删除
// ['a', 'b', 'e', 'c', 'd']
// ['a', 'b', 'c', 'd']
// i = 2，e1 = 2, e2 = 1 (i > e2 且 删除[i,e1])
// diff(['a', 'b', 'e', 'c', 'd'], ['a', 'b', 'c', 'd'])

// 前面删除
// ['f', 'a', 'b', 'c', 'd']
// ['a', 'b', 'c', 'd']
// i=0, e1 =0, e2=-1 (i> e2 ,且删除 [i,e1])
diff(['f', 'a', 'b', 'c', 'd'], ['a', 'b', 'c', 'd'])
